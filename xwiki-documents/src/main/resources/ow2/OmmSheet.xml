<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>ow2</web>
<name>OmmSheet</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>ow2.Omm</parent>
<creator>xwiki:XWiki.sl</creator>
<author>xwiki:XWiki.sl</author>
<customClass></customClass>
<contentAuthor>xwiki:XWiki.sl</contentAuthor>
<creationDate>1446115421000</creationDate>
<date>1446450011000</date>
<contentUpdateDate>1446450011000</contentUpdateDate>
<version>5.152</version>
<title>$xwiki.getDocument($doc.parent).displayTitle OMM</title>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>true</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden>
<content>{{velocity}}
#set($xobj = $doc.getObject('ow2.Omm'))
#set($class = $xobj.xWikiClass)
#foreach($prop in $class.properties)
#if($prop.name != "title")
#if($prop.name == "PDOC-1_1")
== PDOC: Project Documentation ==
{{box}}Purpose: Develop and maintain project documentation, making it readily accessible to the community{{/box}}
#elseif($prop.name == "STD-1_1")
== STD: Use of Established and Widespread Standards ==
{{box}}Purpose: Promote the use and implementation of Open Standards for product and process{{/box}}

#set($sum = 0)
#set($counter = 0)
#foreach($prop in $class.properties)
#if($prop.name.startsWith("STD"))
  #set($val = $mathtool.toInteger($xobj.get($prop.name)))
  #set($sum = $mathtool.add($sum, $val))
  #set($counter = $mathtool.add($counter, 1))
#end
#end
#elseif($prop.name == "QTP-1_1")
== QTP: Quality of the Testing Process ==
{{box}}Purpose: Provide and implement a high quality testing process{{/box}}
#elseif($prop.name == "LCS-1_1")
== LCS: Licenses, Copyright and IP Management ==
{{box}}Purpose: Ensure the project has appropriate intellectual property policy, selects appropriate licenses and copyrights and manage them satisfactorily
{{/box}}

{{box}}
The text in this section does not constitute legal advice. It is important to make clear what licenses we are talking about or more precisely what components need to be taken into account. It is not just the components "in the repository" (or "in the source folders or  archives"). One has to look at libraries, and the components the software will be linked to.
{{/box}}
#elseif($prop.name == "ENV-1_1")
== ENV: Environment ==
{{box}}Purpose: Provide development resources such as operating system, language compilers, development tools, communication tools, ideally all tools should be FLOSS-compliant and interoperable{{/box}}
#elseif($prop.name == "DFCT-1_1")
== DFCT: Number of commits and bug reports ==
{{box}}Purpose: Specifically analyze the activity related to source code commits and bug reports provided to the project{{/box}}
#elseif($prop.name == "MST-1_1")
== MST: Maintainability and Stability ==
{{box}}Purpose: Specify, develop and maintain non-functional requirements for the project (e.g. maintainability, stability){{/box}}
#elseif($prop.name == "CM-1_1")
== CM: Configuration / Version Management ==
{{box}}Purpose: Establish and maintain the integrity of the product and its releases{{/box}}
#elseif($prop.name == "PP-1_1")
== PP: Project Planning ==
{{box}}Purpose: Estimate and plan project activities{{/box}}
#elseif($prop.name == "REQM-1")
== REQM: Requirements Management ==
{{box}}Purpose: Establish and maintain Requirements{{/box}}
#elseif($prop.name == "RDMP-1")
== RDMP: Roadmap ==
{{box}}Purpose: Create and maintain product roadmap{{/box}}
#elseif($prop.name == "STK-1_1")
== STK: Stakeholders ==
{{box}}Purpose: Plan and manage stakeholder involvement{{/box}}
#end
#set($propName = $prop.name)
#set($propName = $propName.replace("_","."))
|(% style="width:10%" %)$propName|(% style="width:65%" %)$prop.prettyName|(% style="width:5%; text-align: right;" %){{html}}&lt;span class="glyphicon glyphicon-info-sign" id="${prop.name}-info" data-container="body" data-toggle="popover" data-placement="left"&gt;&lt;/span&gt;{{/html}}|(% style="width:20%; text-align: right;" %)$doc.display($prop.getName()) % implemented
#end
#end
{{/velocity}}

{{velocity}}
{{html}}
&lt;script type="text/javascript"&gt;
require(['jquery', 'bootstrap'], function($) {
  #foreach($prop in $class.properties)
    #set($idx = "${prop.name}-info")
    #set($prompt = $prop.validationMessage)
    #if($prompt.trim() != "")
      #set($items = $prompt.split("\|"))
      #set($output = "")
      #if($items.size() &gt; 1)
        #set($first = $items.get(0))
        #set($idx1 = $first.indexOf(":"))
        #if($idx1 &gt; 0)
          #set($output = "&lt;p&gt;$first&lt;/p&gt;")
          #set($items[0] = "")
        #end
        #set($output = "$output&lt;ul&gt;")
        #foreach($item in $items)
          #if($item != "")
            #set($output = "$output&lt;li&gt;$item&lt;/li&gt;")
          #end
        #end
        #set($output = "$output&lt;/ul&gt;")
      #else
        #set($output = $items.get(0))        
      #end
      $('#$idx').popover({trigger: 'hover click', content: "$output", html: true});
    #else
      $('#$idx').css("display", "none")
    #end
  #end
  $('[data-toggle="popover"]').popover()
});
&lt;/script&gt;
{{/html}}
{{/velocity}}</content></xwikidoc>
